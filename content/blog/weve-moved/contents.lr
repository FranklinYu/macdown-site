id: 10
---
title: We’ve Moved!
---
author: Tzu-ping Chung
---
pub_date: 2017-01-17
---
content:

I mentioned [previously](../site-is-moving/) I was going to migrate the site to be a static-generated site. After more than a week’s hacking with Lektor, I can finally complete the migration. This blog post will be the first to be hosted on the new site, so if you’re reading this, welcome!

The migration isn’t difficult (this site is very simple to begin with), but didn’t go without some trouble. After some investigation ([Jesse’s experience](https://emptysqua.re/blog/experience-migrating-to-lektor/) helped a lot—and he even used MacDown to help the process!) I had to give up on GitHub Pages, and decided to deploy to [Netlify](https://www.netlify.com) instead. One feature in particular is that they offer a very straightforward way to handle HTTP redirects, and with a custom build process I am able to maintain full compatibility to the old site’s URL rules. Built-in Python support also made deploying way simpler than GitHub Pages. All I need to do is to push to my GitHub repo, and sit back.

There are still some rough edges I would like to address to. The site now uses [Remarkable](https://github.com/jonschlinkert/remarkable) to render Markdown, [KaTeX](https://github.com/Khan/KaTeX) for math, and [Prism](http://prismjs.com) for syntax highlighting, and all of these are done at server-side (i.e. compile time), so now every blog post you view is fully static.

This is how I imagine MacDown would render things in the long run. While a Markdown parser/renderer implemented in C is obviously super fast and easy to use (with Objective-C), you have to admit JavaScript libraries now offer a better landscape for a Markdown app. Fortunately macOS makes this easy—[JavaScriptCore](http://nshipster.com/javascriptcore/) solves most issues—and I’m very exicited about this new stack. This, however, also means we’re at unknown water for the moment. But hopefully I can learn more about how things work this way, and implement a better rendering engine for MacDown in the future.

In the mean time, I hope this new site is at least as enjoyable as the old one. And if you find any problems, please, please [open an issue](https://github.com/MacDownApp/macdown-site/issues) to tell me! This would really help a lot.
